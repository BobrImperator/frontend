{{#if this.loaded}}
  <div class="toggle-offering-calendar">
    <ToggleButtons
      @firstLabel={{t "general.hideCalendar"}}
      @firstOptionSelected={{not this.showOfferingCalendar}}
      @secondLabel={{t "general.showCalendar"}}
      @toggle={{toggle "showOfferingCalendar" this}}
    />
  </div>
  {{#if this.showOfferingCalendar}}
    <OfferingCalendar
      @endDate={{this.endDate}}
      @learnerGroups={{this.learnerGroups}}
      @startDate={{this.startDate}}
      @session={{@session}}
    />
  {{/if}}
  <div class="form">
    <div class="item start-date">
      <label>
        {{t "general.startDate"}}:
      </label>
      <PikadayInput
        @format="M/D/YYYY"
        @value={{this.startDate}}
        @onSelection={{action "updateStartDate"}}
      />
    </div>
    <div class="item start-time">
      <label>
        {{t "general.startTime"}}:
        <span class="timezone">
          ({{browser-timezone}})
        </span>
      </label>
      <TimePicker @date={{this.startDate}} @action={{action "updateStartTime"}} />
    </div>
    <div class="item offering-duration">
      <label>
        {{t "general.duration"}}:
      </label>
      <div class="duration-inputs">
        <div class="hours">
          <div class="hours-container">
            <input
              class={{if
                (and
                  (v-get this "durationHours" "isInvalid")
                  (is-in this.showErrorsFor "durationHours")
                )
                "has-error"
              }}
              min="0"
              type="number"
              value={{this.durationHours}}
              oninput={{perform this.updateDurationHours value="target.value"}}
            >
            {{#if
              (and
                (v-get this "durationHours" "isInvalid")
                (is-in this.showErrorsFor "durationHours")
              )
            }}
              <span class="validation-error-message">
                {{v-get this "durationHours" "message"}}
              </span>
            {{/if}}
            <label>
              {{t "general.hours"}}
            </label>
          </div>
        </div>
        <div class="minutes">
          <div class="minutes-container">
            <input
              class={{if
                (and
                  (v-get this "durationMinutes" "isInvalid")
                  (is-in this.showErrorsFor "durationMinutes")
                )
                "has-error"
              }}
              max="59"
              min="0"
              type="number"
              value={{this.durationMinutes}}
              oninput={{perform this.updateDurationMinutes value="target.value"
              }}
            >
            {{#if
              (and
                (v-get this "durationMinutes" "isInvalid")
                (is-in this.showErrorsFor "durationMinutes")
              )
            }}
              <span class="validation-error-message">
                {{v-get this "durationMinutes" "message"}}
              </span>
            {{/if}}
            <label>
              {{t "general.minutes"}}
            </label>
          </div>
        </div>
      </div>
    </div>
    <div class="item end-date-time">
      <label>
        {{t "general.end"}}:
      </label>
      {{#if this.endDate}}
        <div class="text">
          {{moment-format this.endDate "M/D/YYYY h:mm a"}}
        </div>
      {{/if}}
    </div>
    {{#if this.showMakeRecurring}}
      <div class="item make-recurring">
        <label>
          {{t "general.makeRecurring"}}
        </label>
        <ToggleYesno
          @yes={{this.makeRecurring}}
          @toggle={{this.toggle-action "makeRecurring" this}}
        />
        {{#if this.makeRecurring}}
          <div class="make-recurring-options">
            <div class="make-recurring-days">
              {{#each this.recurringDayOptions as |obj i|}}
                <div>
                  <input
                    id="make-recurring-day-input-{{i}}"
                    type="checkbox"
                    checked={{or
                      (is-in this.recurringDays obj.day)
                      (eq (moment-format this.startDate "d") obj.day)
                    }}
                    onclick={{action "toggleRecurringDay" obj.day}}
                    disabled={{eq (moment-format this.startDate "d") obj.day}}
                    data-test-recurring-day-input={{i}}
                  >
                  <label
                    class="day-of-week clickable"
                    for="make-recurring-day-input-{{i}}"
                    data-test-recurring-day-label={{i}}
                  >
                    {{t obj.t}}
                  </label>
                </div>
              {{/each}}
            </div>
            <div class="make-recurring-input-container">
              <input
                type="text"
                value={{this.numberOfWeeks}}
                oninput={{action (mut this.numberOfWeeks) value="target.value"}}
                onkeyup={{action "addErrorDisplayFor" "numberOfWeeks"}}
                class={{concat
                  "make-recurring-input "
                  (if
                    (and
                      (v-get this "numberOfWeeks" "isInvalid")
                      (is-in this.showErrorsFor "numberOfWeeks")
                    )
                    "has-error"
                  )
                }}
              >
              <label class="make-recurring-input-label">
                {{t "general.weeks"}}
              </label>
              {{#if
                (and
                  (v-get this "numberOfWeeks" "isInvalid")
                  (is-in this.showErrorsFor "numberOfWeeks")
                )
              }}
                <span class="validation-error-message">
                  {{v-get this "numberOfWeeks" "message"}}
                </span>
              {{/if}}
            </div>
          </div>
        {{/if}}
      </div>
    {{/if}}
    {{#if @showRoom}}
      <div class="item room">
        <label>
          {{t "general.location"}}:
          {{#unless @offering}}
            {{t "general.defaultLocationNotLoaded"}}
          {{/unless}}
        </label>
        <input
          type="text"
          value={{this.room}}
          oninput={{action (mut this.room) value="target.value"}}
          onkeyup={{action "addErrorDisplayFor" "room"}}
        >
        {{#if (and (v-get this "room" "isInvalid") (is-in this.showErrorsFor "room"))}}
          <span class="validation-error-message">
            {{v-get this "room" "message"}}
          </span>
        {{/if}}
      </div>
    {{/if}}
    {{#if @showInstructors}}
      <div class="instructors item">
        <label>
          {{t "general.instructors"}}:
          {{#unless @offering}}
            {{t "general.defaultInstructorsNotLoaded"}}
          {{/unless}}
        </label>
        <InstructorSelectionManager
          @addInstructor={{action "addInstructor"}}
          @addInstructorGroup={{action "addInstructorGroup"}}
          @removeInstructor={{action "removeInstructor"}}
          @removeInstructorGroup={{action "removeInstructorGroup"}}
          @availableInstructorGroups={{await this.availableInstructorGroups}}
          @instructorGroups={{this.instructorGroups}}
          @instructors={{this.instructors}}
        />
      </div>
    {{/if}}
    <div class="learner-groups item">
      <label>
        {{t "general.learnerGroups"}}:
      </label>
      {{#if @cohorts.length}}
        <LearnergroupSelectionManager
          @learnerGroups={{this.learnerGroups}}
          @cohorts={{@cohorts}}
          @add={{action "addLearnerGroup"}}
          @remove={{action "removeLearnerGroup"}}
        />
      {{else}}
        <p>
          {{t "general.noAvailableLearnerGroups"}}
        </p>
      {{/if}}
      {{#if
        (and
          (v-get this "learnerGroups" "isInvalid")
          (is-in this.showErrorsFor "learnerGroups")
        )
      }}
        <p class="validation-error-message">
          {{v-get this "learnerGroups" "message"}}
        </p>
      {{/if}}
    </div>
    <div class="buttons">
      <button
        class="done text"
        disabled={{or this.saveOffering.isRunning}}
        {{on "click" (perform this.validateThenSaveOffering)}}
      >
        {{#if this.saveOffering.isRunning}}
          <LoadingSpinner />
        {{else}}
          {{t "general.done"}}
        {{/if}}
      </button>
      <button class="cancel text" {{on "click" @close}}>
        {{t "general.cancel"}}
      </button>
    </div>
  </div>
{{/if}}
{{#if this.saveOffering.isRunning}}
  <WaitSaving
    @showProgress={{true}}
    @totalProgress={{this.offeringsToSave}}
    @currentProgress={{this.savedOfferings}}
  />
{{/if}}
