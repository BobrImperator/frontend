<div class="new-learningmaterial" data-test-new-learningmaterial>
  <div class="item">
    <label>
      {{t "general.displayName"}}:
    </label>
    <span>
      <Input
        type="text"
        @value={{this.title}}
        @focus-out={{fn this.addErrorDisplayFor "title"}}
        disabled={{this.prepareSave.isRunning}}
      />
      {{#each (await (compute (fn this.getErrorsFor) "title")) as |message|}}
        <span class="validation-error-message">
          {{message}}
        </span>
      {{/each}}
    </span>
  </div>
  <div class="item">
    <label>
      {{t "general.status"}}:
    </label>
    <span>
      <select {{on "change" (fn this.changeStatusId)}}>
        {{#each @learningMaterialStatuses as |lmStatus|}}
          <option
            value={{lmStatus.id}}
            selected={{is-equal lmStatus this.selectedStatus}}
          >
            {{lmStatus.title}}
          </option>
        {{/each}}
      </select>
    </span>
  </div>
  <div class="item" data-test-owninguser>
    <label>
      {{t "general.owner"}}:
    </label>
    <span class="owninguser">
      <UserNameInfo @user={{await this.currentUser.model}} />
    </span>
  </div>
  <div class="item">
    <label>
      {{t "general.contentAuthor"}}:
    </label>
    <span>
      <Input
        type="text"
        @value={{this.originalAuthor}}
        @focus-out={{fn this.addErrorDisplayFor "originalAuthor"}}
        disabled={{this.prepareSave.isRunning}}
      />
      {{#each (await (compute (fn this.getErrorsFor) "originalAuthor")) as |message|}}
        <span class="validation-error-message">
          {{message}}
        </span>
      {{/each}}
    </span>
  </div>
  <div class="item">
    <label>
      {{t "general.userRole"}}:
    </label>
    <span>
      <select {{on "change" (fn this.changeUserRoleId)}}>
        {{#each @learningMaterialUserRoles as |role|}}
          <option value={{role.id}} selected={{is-equal role this.selectedUserRole}}>
            {{role.title}}
          </option>
        {{/each}}
      </select>
    </span>
  </div>
  {{#if this.isLink}}
    <div class="item">
      <label>
        {{t "general.url"}}:
      </label>
      <span>
        {{! template-lint-disable no-bare-strings}}
        <input
          type="text"
          placeholder="https://example.com"
          value={{this.bestLink}}
          inputmode="url"
          disabled={{this.prepareSave.isRunning}}
          {{on "input" (pick "target.value" this.changeLink)}}
          {{on "keyup" (fn this.addErrorDisplayFor "link")}}
          {{on "focus" (fn this.selectAllText)}}
        >
        {{#each (await (compute (fn this.getErrorsFor) "link")) as |message|}}
          <span class="validation-error-message">
            {{message}}
          </span>
        {{/each}}
      </span>
    </div>
  {{/if}}
  {{#if this.isCitation}}
    <div class="item">
      <label>
        {{t "general.citation"}}:
      </label>
      <span class="citation">
        <Textarea
          @value={{this.citation}}
          @focus-out={{fn this.addErrorDisplayFor "citation"}}
          disabled={{this.prepareSave.isRunning}}
        />
        {{#each (await (compute (fn this.getErrorsFor) "citation")) as |message|}}
          <span class="validation-error-message">
            {{message}}
          </span>
        {{/each}}
      </span>
    </div>
  {{/if}}
  <div class="item">
    <label>
      {{t "general.description"}}:
    </label>
    <span>
      <HtmlEditor @content={{this.description}} @update={{fn (mut this.description)}} />
    </span>
  </div>
  {{#if this.isFile}}
    <div class="item">
      <label>
        {{t "general.copyrightPermission"}}:
      </label>
      <span>
        <p id="lm-copyright-agreement-text">
          <input
            type="checkbox"
            checked={{this.copyrightPermission}}
            {{on "click" (set this.copyrightPermission (not this.copyrightPermission))}}
            data-test-copyright-agreement
          >
          {{t "general.copyrightAgreement"}}
          {{#if (await (compute (fn this.hasErrorFor) "copyrightPermission"))}}
            <br>
            <span class="validation-error-message" data-test-agreement-validation-error-message>
              {{t "errors.agreementRequired"}}
            </span>
          {{/if}}
        </p>
      </span>
    </div>
    {{#unless this.copyrightPermission}}
      <div class="item">
        <label>
          {{t "general.copyrightRationale"}}:
        </label>
        <span>
          <Textarea
            @value={{this.copyrightRationale}}
            @focus-out={{fn this.addErrorDisplayFor "copyrightRationale"}}
            data-test-copyright-rationale
          />
        {{#each (await (compute (fn this.getErrorsFor) "copyrightRationale")) as |message|}}
          <span class="validation-error-message">
            {{message}}
          </span>
        {{/each}}
        </span>
      </div>
    {{/unless}}
    <div class="item">
      <label for={{concat this.uniqueId "file-upload"}}>
        {{t "general.file"}}:
      </label>
      <LearningMaterialUploader
        @for={{concat this.uniqueId "file-upload"}}
        @setFilename={{set this.filename}}
        @setFileHash={{set this.fileHash}}
      />
      {{#each (await (compute (fn this.getErrorsFor) "filename")) as |message|}}
        <span class="validation-error-message">
          {{message}}
        </span>
      {{/each}}
    </div>
  {{/if}}
  <div class="buttons">
    <button class="done text" type="button" {{on "click" (perform this.prepareSave)}}>
      {{#if this.prepareSave.isRunning}}
        <LoadingSpinner />
      {{else}}
        {{t "general.done"}}
      {{/if}}
    </button>
    <button class="cancel text" type="button" {{on "click" @cancel}}>
      {{t "general.cancel"}}
    </button>
  </div>

</div>
